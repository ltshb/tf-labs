locals {
    ansible_hosts_file = <<-EOT
        # ansible hosts test - generated by terraform from ec2 instance info
        [amz_linux]
        %{ for index, h in aws_instance.test.*.public_dns ~}
        server-${index} ansible_host=${h}
        %{ endfor ~}

        [amz_linux:vars]
        ansible_user=ec2-user
        # Below required to use ansible yum module
        ansible_python_interpreter=/usr/bin/python2
        ansible_ssh_common_args='-o StrictHostKeyChecking=no'

        [aws_servers:children]
        amz_linux 
        EOT 
}

resource "local_file" "ansible_hosts" {
    for_each = toset(var.create_ansible_hosts ? ["hosts"]: [])

    content     = <<-EOT
        # ansible hosts test - generated by terraform from ec2 instance info
        [amz_linux]
        %{ for index, h in aws_instance.test.*.public_dns ~}
        server-${index} ansible_host=${h}
        %{ endfor ~}

        [amz_linux:vars]
        ansible_user=ec2-user
        # Below required to use ansible yum module
        ansible_python_interpreter=/usr/bin/python2
        ansible_ssh_common_args='-o StrictHostKeyChecking=no'

        [aws_servers:children]
        amz_linux 
        EOT
    file_permission = "0777"
    directory_permission = "0777"
    filename = "${path.root}ansible/hosts"
}